#nullable enable
static WB.AppConfiguration.IConfigurationExtensions.Get<TTarget>(this WB.AppConfiguration.IConfiguration! this) -> TTarget
static WB.AppConfiguration.IConfigurationExtensions.GetValue(this WB.AppConfiguration.IConfiguration! this, string! key) -> object?
static WB.AppConfiguration.IConfigurationExtensions.GetValue(this WB.AppConfiguration.IConfiguration! this, string! key, System.Type! type) -> object?
static WB.AppConfiguration.IConfigurationExtensions.GetValue<TValue>(this WB.AppConfiguration.IConfiguration! this, string! key) -> TValue
static WB.AppConfiguration.IConfigurationExtensions.TryGetValue(this WB.AppConfiguration.IConfiguration! this, string! key, System.Type! type, out object? value) -> bool
static WB.AppConfiguration.IConfigurationExtensions.TryGetValue<TValue>(this WB.AppConfiguration.IConfiguration! this, string! key, out TValue value) -> bool
WB.AppConfiguration.Configuration
WB.AppConfiguration.Configuration.Configuration() -> void
WB.AppConfiguration.Configuration.ContainsKey(object! key) -> bool
WB.AppConfiguration.Configuration.Count.get -> int
WB.AppConfiguration.Configuration.GetEnumerator() -> System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<object!, object?>>!
WB.AppConfiguration.Configuration.Keys.get -> System.Collections.Generic.IEnumerable<object!>!
WB.AppConfiguration.Configuration.Layers.get -> System.Collections.Generic.IEnumerable<object!>!
WB.AppConfiguration.Configuration.Pop() -> object!
WB.AppConfiguration.Configuration.Push(object! configurationLayer) -> System.IDisposable!
WB.AppConfiguration.Configuration.Remove(object! configurationLayer) -> void
WB.AppConfiguration.Configuration.this[object! key].get -> object?
WB.AppConfiguration.Configuration.TryGetValue(object! key, out object? value) -> bool
WB.AppConfiguration.Configuration.Values.get -> System.Collections.Generic.IEnumerable<object?>!
WB.AppConfiguration.IConfiguration
WB.AppConfiguration.IConfiguration.Layers.get -> System.Collections.Generic.IEnumerable<object!>!
WB.AppConfiguration.IConfiguration.Pop() -> object!
WB.AppConfiguration.IConfiguration.Push(object! configurationLayer) -> System.IDisposable!
WB.AppConfiguration.IConfiguration.Remove(object! configurationLayer) -> void
WB.AppConfiguration.IConfigurationExtensions
